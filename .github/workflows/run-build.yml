name: Build and Release Arttulcat

on:
  push:
    branches:
      - main # Automatically trigger on pushes to the 'main' branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use v4 of the checkout action
        # This checks out the repository where this workflow file resides.
        # The 'build.sh' script will then clone 'arttulcat_browser' into this workspace.

      - name: Set up build environment for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          # These are common dependencies; customize as needed for your specific Firefox-based build
          sudo apt-get update
          sudo apt-get install -y build-essential curl git mercurial python3 python3-pip zip unzip npm autoconf2.13 libtool libffi-dev libgdk-pixbuf2.0-dev libgtk-3-dev libdbus-1-dev libevent-dev libglib2.0-dev libssl-dev libx11-dev libxcomposite-dev libxdamage-dev libxext-dev libxfixes-dev libxrandr-dev libxtst-dev libxinerama-dev libncursesw5-dev libnotify-dev libasound2-dev libpulse-dev libcairo2-dev libpixman-1-dev yasm

      - name: Set up build environment for macOS
        if: matrix.os == 'macos-latest'
        run: |
          xcode-select --install || true
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || true
          brew update
          brew install mercurial python@3 node openssl@1.1 rust
          echo "/usr/local/opt/python@3/bin" >> $GITHUB_PATH

      - name: Set up build environment for Windows
        if: matrix.os == 'windows-latest'
        run: |
          # These are common dependencies; customize as needed for your specific Firefox-based build
          # For a full Firefox build, you'll likely need specific Visual Studio components.
          # You might use choco to install general tools, but consider dedicated setup for VS.
          choco install -y git mercurial python3 nodejs

      - name: Make build script executable (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: chmod +x ./build.sh

      - name: Run Arttulcat build script
        run: |
          # This script now contains all the cloning, moving, and mach commands.
          ./build.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4 # Use v4 of the upload-artifact action
        with:
          name: arttulcat-build-${{ matrix.os }}
          path: ./release_artifacts/ # Directory where your script places the built files
          # Optional: if-no-files-found: warn # warn, error, or ignore. Default is warn.

  release:
    runs-on: ubuntu-latest
    needs: build # This job runs only after all 'build' matrix jobs complete successfully
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4 # Use v4 of the download-artifact action
        with:
          path: artifacts # All downloaded artifacts will be placed in this directory

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1 # Action for creating GitHub releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Default token provided by GitHub Actions
        with:
          tag_name: v${{ github.run_number }} # Creates a tag like 'v1', 'v2', etc.
          name: Arttulcat Release ${{ github.run_number }}
          draft: false # Set to true to create a draft release
          prerelease: false # Set to true for pre-release builds
          files: |
            # IMPORTANT: Ensure these paths match the exact names and locations
            # of the files produced by your build scripts in the 'release_artifacts' directory.
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.tar.gz
            artifacts/arttulcat-build-macos-latest/arttulcat.dmg
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.deb
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.rpm
            artifacts/arttulcat-build-windows-latest/arttulcat.exe

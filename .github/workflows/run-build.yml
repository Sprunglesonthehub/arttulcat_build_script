name: Build and Release Arttulcat (Linux ONLY)

on:
  push:
    branches:
      - main # Automatically trigger on pushes to the 'main' branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

# Grant permissions for the release job to create releases and tags
permissions:
  contents: write

jobs:
  build-linux: # Renamed job for clarity
    name: Build on Ubuntu (Linux)
    runs-on: ubuntu-latest # Only run on ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up build environment for Ubuntu
        run: |
          sudo apt-get update
          # Ensure all dependencies needed by your build.sh and mach bootstrap are here
          sudo apt-get install -y \
            build-essential curl git mercurial python3 python3-pip zip unzip npm \
            autoconf2.13 libtool libffi-dev libgdk-pixbuf2.0-dev libgtk-3-dev \
            libdbus-1-dev libevent-dev libglib2.0-dev libssl-dev libx11-dev \
            libxcomposite-dev libxdamage-dev libxext-dev libxfixes-dev \
            libxrandr-dev libxtst-dev libxinerama-dev libncursesw5-dev \
            libnotify-dev libasound2-dev libpulse-dev libcairo2-dev libpixman-1-dev yasm \
            wget # wget might be used by mach bootstrap

      - name: Make build script executable
        run: chmod +x ./build.sh # build.sh is assumed to be in the root of your repo

      - name: Run Arttulcat build script (Linux)
        shell: bash 
        run: |
          ./build.sh # This now runs the Linux-focused build.sh

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arttulcat-build-ubuntu-latest # Consistent artifact name
          path: ./release_artifacts/ # This directory is created by your build.sh

  release:
    name: Create Release (Linux artifacts)
    runs-on: ubuntu-latest
    needs: build-linux # Depends on the successful completion of the Linux build job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download Linux build artifacts
        uses: actions/download-artifact@v4
        with:
          name: arttulcat-build-ubuntu-latest # Download the specific Linux artifact
          path: artifacts/arttulcat-build-ubuntu-latest # Place it in a structured path

      - name: List downloaded artifacts (for debugging)
        run: |
          echo "Listing contents of 'artifacts' directory:"
          ls -R artifacts
          echo "---"

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: Arttulcat Release v${{ github.run_number }} (Linux)
          draft: false
          prerelease: false
          # Files from the Linux build
          files: |
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.tar.gz
            artifacts/arttulcat-build-ubuntu-latest/arttulcat*.deb
            artifacts/arttulcat-build-ubuntu-latest/arttulcat*.rpm

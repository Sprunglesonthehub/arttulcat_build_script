name: Build and Release Arttulcat

on:
  push:
    branches:
      - main # Automatically trigger on pushes to the 'main' branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use v4 of the checkout action

      - name: Set up build environment for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl git mercurial python3 python3-pip zip unzip npm autoconf2.13 libtool libffi-dev libgdk-pixbuf2.0-dev libgtk-3-dev libdbus-1-dev libevent-dev libglib2.0-dev libssl-dev libx11-dev libxcomposite-dev libxdamage-dev libxext-dev libxfixes-dev libxrandr-dev libxtst-dev libxinerama-dev libncursesw5-dev libnotify-dev libasound2-dev libpulse-dev libcairo2-dev libpixman-1-dev yasm

      - name: Set up build environment for macOS
        if: matrix.os == 'macos-latest'
        run: |
          xcode-select --install || true
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || true
          brew update
          brew install mercurial python@3 node openssl@1.1 rust
          echo "/usr/local/opt/python@3/bin" >> $GITHUB_PATH

      # --- START OF MODIFIED WINDOWS SETUP ---
      - name: Set up build environment for Windows (Part 1: Git via Scoop/Choco)
        if: matrix.os == 'windows-latest'
        shell: pwsh # Explicitly use PowerShell Core for clarity
        run: |
          echo "Installing Git via Scoop if available, else Chocolatey..."
          $scoopInstalled = Get-Command scoop -ErrorAction SilentlyContinue
          if ($scoopInstalled) {
            scoop install git
          } else {
            Write-Host "Scoop not found or failed, falling back to Chocolatey for Git."
            choco install -y git.install
          }

      - name: Set up build environment for Windows (Part 2: Mercurial and Python)
        if: matrix.os == 'windows-latest'
        shell: pwsh # Explicitly use PowerShell Core for clarity
        run: |
          echo "Installing Mercurial and Python 3 via Chocolatey..."
          choco install -y mercurial python3

      - name: Set up Node.js for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/setup-node@v4 # Use the dedicated setup-node action
        with:
          node-version: '18' # Specify the Node.js version your build requires
      # --- END OF MODIFIED WINDOWS SETUP ---

      - name: Make build script executable (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: chmod +x ./build.sh

      - name: Run Arttulcat build script
        run: |
          ./build.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arttulcat-build-${{ matrix.os }}
          path: ./release_artifacts/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: Arttulcat Release ${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.tar.gz
            artifacts/arttulcat-build-macos-latest/arttulcat.dmg
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.deb
            artifacts/arttulcat-build-ubuntu-latest/arttulcat.rpm
            artifacts/arttulcat-build-windows-latest/arttulcat.exe
